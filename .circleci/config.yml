version: 2.1
orbs:
  node: circleci/node@5.0.2
  aws-cli: circleci/aws-cli@3.1.1
  eb: circleci/aws-elastic-beanstalk@2.0.1
jobs:
  aws-cli-cred-setup:
    executor: aws-cli/default
    steps:
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_DEFAULT_REGION
  build:
    docker:
      - image: 'cimg/node:14.15'
    steps:
      - node/install:
          node-version: '14.15'
      - checkout
      - aws-cli/setup
      - eb/setup
      - run:
          name: Install Front-End Dependencies
          command: |
            npm run frontend:install
      - run:
          name: Install API Dependencies
          command: |
            npm run api:install
      - run:
          name: Front-End Build
          command: |
            npm run frontend:build
      - run:
          name: API Build
          command: |
            npm run api:build

  deploy:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - node/install:
          node-version: '14.15'
      - aws-cli/setup
      - eb/setup
      - checkout
      - run:
          name: Deploy App
          command: |
            npm run deploy
      - run:
          name: Set eb env
          command: |
            eb setenv ENV=$ENV PORT=$PORT POSTGRES_HOST=$POSTGRES_HOST POSTGRES_DB=$POSTGRES_DB POSTGRES_DB_TEST=$POSTGRES_DB_TEST POSTGRES_USER=$POSTGRES_USER POSTGRES_PASSWORD=$POSTGRES_PASSWORD JWT_KEY=$JWT_KEY

workflows:
  aws-cli:
    jobs:
      - aws-cli-cred-setup:
          context: aws
  store-front:
    jobs:
      - build
      - hold:
          filters:
            branches:
              only:
                - master
          type: approval
          requires:
            - build
      - deploy:
          requires:
            - hold
